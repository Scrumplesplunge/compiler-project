-- Expression syntax without factorisation:
expression :: Parser Token (L Expression)
expression = ...                                                 ...
         ||| operand
         ||| operand +++ symbol Lexer.COMP_EQ +++ operand    >>> ...
         ||| operand +++ symbol Lexer.COMP_GE +++ operand    >>> ...
         ||| operand +++ symbol Lexer.COMP_GT +++ operand    >>> ...
         ||| operand +++ symbol Lexer.COMP_LE +++ operand    >>> ...
         ||| operand +++ symbol Lexer.COMP_LT +++ operand    >>> ...
         ||| operand +++ symbol Lexer.COMP_NE +++ operand    >>> ...
         ||| operand +++ symbol Lexer.DIV +++ operand        >>> ...
         ||| operand +++ symbol Lexer.MOD +++ operand        >>> ...
         ||| operand +++ symbol Lexer.SUB +++ operand        >>> ...
             ...                                                 ...

-- And with factorisation:
expression :: Parser Token (L Expression)
expression = ...                                                 ...
         ||| operand +++ (
                   Epsilon OPERAND                           >>> ...
               ||| symbol Lexer.COMP_EQ +++ operand          >>> ...
               ||| symbol Lexer.COMP_GE +++ operand          >>> ...
               ||| symbol Lexer.COMP_GT +++ operand          >>> ...
               ||| symbol Lexer.COMP_LE +++ operand          >>> ...
               ||| symbol Lexer.COMP_LT +++ operand          >>> ...
               ||| symbol Lexer.COMP_NE +++ operand          >>> ...
               ||| symbol Lexer.DIV +++ operand              >>> ...
               ||| symbol Lexer.MOD +++ operand              >>> ...
               ||| symbol Lexer.SUB +++ operand              >>> ...
                   ...                                           ...
             )
